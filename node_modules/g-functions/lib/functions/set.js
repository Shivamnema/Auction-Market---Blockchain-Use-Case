'use strict'

const generic = require('@nodeguy/generic')
const _ = generic._
const is = require('@nodeguy/type').is

const set = generic.function({name: 'set', curry: true})

// https://www.ecma-international.org/ecma-262/6.0/#sec-%typedarray%.prototype.set-array-offset
set.method([_, _, is(Int8Array)],
  (array, offset, int8Array) =>
    int8Array.set(array, offset)
)

// https://www.ecma-international.org/ecma-262/6.0/#sec-%typedarray%.prototype.set-array-offset
set.method([_, _, is(Uint8Array)],
  (array, offset, uint8Array) =>
    uint8Array.set(array, offset)
)

// https://www.ecma-international.org/ecma-262/6.0/#sec-%typedarray%.prototype.set-array-offset
set.method([_, _, is(Uint8ClampedArray)],
  (array, offset, uint8ClampedArray) =>
    uint8ClampedArray.set(array, offset)
)

// https://www.ecma-international.org/ecma-262/6.0/#sec-%typedarray%.prototype.set-array-offset
set.method([_, _, is(Int16Array)],
  (array, offset, int16Array) =>
    int16Array.set(array, offset)
)

// https://www.ecma-international.org/ecma-262/6.0/#sec-%typedarray%.prototype.set-array-offset
set.method([_, _, is(Uint16Array)],
  (array, offset, uint16Array) =>
    uint16Array.set(array, offset)
)

// https://www.ecma-international.org/ecma-262/6.0/#sec-%typedarray%.prototype.set-array-offset
set.method([_, _, is(Int32Array)],
  (array, offset, int32Array) =>
    int32Array.set(array, offset)
)

// https://www.ecma-international.org/ecma-262/6.0/#sec-%typedarray%.prototype.set-array-offset
set.method([_, _, is(Uint32Array)],
  (array, offset, uint32Array) =>
    uint32Array.set(array, offset)
)

// https://www.ecma-international.org/ecma-262/6.0/#sec-%typedarray%.prototype.set-array-offset
set.method([_, _, is(Float32Array)],
  (array, offset, float32Array) =>
    float32Array.set(array, offset)
)

// https://www.ecma-international.org/ecma-262/6.0/#sec-%typedarray%.prototype.set-array-offset
set.method([_, _, is(Float64Array)],
  (array, offset, float64Array) =>
    float64Array.set(array, offset)
)

// https://www.ecma-international.org/ecma-262/6.0/#sec-map.prototype.set
set.method([_, _, is(Map)],
  (key, value, map) =>
    map.set(key, value)
)

// https://www.ecma-international.org/ecma-262/6.0/#sec-weakmap.prototype.set
set.method([_, _, is(WeakMap)],
  (key, value, weakMap) =>
    weakMap.set(key, value)
)

module.exports = set
