'use strict'

const generic = require('@nodeguy/generic')
const _ = generic._
const is = require('@nodeguy/type').is

const subarray = generic.function({name: 'subarray', curry: true})

// https://www.ecma-international.org/ecma-262/6.0/#sec-%typedarray%.prototype.subarray
subarray.method([_, _, is(Int8Array)],
  (begin, end, int8Array) =>
    int8Array.subarray(begin, end)
)

// https://www.ecma-international.org/ecma-262/6.0/#sec-%typedarray%.prototype.subarray
subarray.method([_, _, is(Uint8Array)],
  (begin, end, uint8Array) =>
    uint8Array.subarray(begin, end)
)

// https://www.ecma-international.org/ecma-262/6.0/#sec-%typedarray%.prototype.subarray
subarray.method([_, _, is(Uint8ClampedArray)],
  (begin, end, uint8ClampedArray) =>
    uint8ClampedArray.subarray(begin, end)
)

// https://www.ecma-international.org/ecma-262/6.0/#sec-%typedarray%.prototype.subarray
subarray.method([_, _, is(Int16Array)],
  (begin, end, int16Array) =>
    int16Array.subarray(begin, end)
)

// https://www.ecma-international.org/ecma-262/6.0/#sec-%typedarray%.prototype.subarray
subarray.method([_, _, is(Uint16Array)],
  (begin, end, uint16Array) =>
    uint16Array.subarray(begin, end)
)

// https://www.ecma-international.org/ecma-262/6.0/#sec-%typedarray%.prototype.subarray
subarray.method([_, _, is(Int32Array)],
  (begin, end, int32Array) =>
    int32Array.subarray(begin, end)
)

// https://www.ecma-international.org/ecma-262/6.0/#sec-%typedarray%.prototype.subarray
subarray.method([_, _, is(Uint32Array)],
  (begin, end, uint32Array) =>
    uint32Array.subarray(begin, end)
)

// https://www.ecma-international.org/ecma-262/6.0/#sec-%typedarray%.prototype.subarray
subarray.method([_, _, is(Float32Array)],
  (begin, end, float32Array) =>
    float32Array.subarray(begin, end)
)

// https://www.ecma-international.org/ecma-262/6.0/#sec-%typedarray%.prototype.subarray
subarray.method([_, _, is(Float64Array)],
  (begin, end, float64Array) =>
    float64Array.subarray(begin, end)
)

module.exports = subarray
