'use strict'

const generic = require('@nodeguy/generic')
const is = require('@nodeguy/type').is

const reverse = generic.function({name: 'reverse', curry: true})

// https://www.ecma-international.org/ecma-262/6.0/#sec-array.prototype.reverse
reverse.method([is(Array)],
  (array) =>
    array.reverse()
)

// https://www.ecma-international.org/ecma-262/6.0/#sec-%typedarray%.prototype.reverse
reverse.method([is(Int8Array)],
  (int8Array) =>
    int8Array.reverse()
)

// https://www.ecma-international.org/ecma-262/6.0/#sec-%typedarray%.prototype.reverse
reverse.method([is(Uint8Array)],
  (uint8Array) =>
    uint8Array.reverse()
)

// https://www.ecma-international.org/ecma-262/6.0/#sec-%typedarray%.prototype.reverse
reverse.method([is(Uint8ClampedArray)],
  (uint8ClampedArray) =>
    uint8ClampedArray.reverse()
)

// https://www.ecma-international.org/ecma-262/6.0/#sec-%typedarray%.prototype.reverse
reverse.method([is(Int16Array)],
  (int16Array) =>
    int16Array.reverse()
)

// https://www.ecma-international.org/ecma-262/6.0/#sec-%typedarray%.prototype.reverse
reverse.method([is(Uint16Array)],
  (uint16Array) =>
    uint16Array.reverse()
)

// https://www.ecma-international.org/ecma-262/6.0/#sec-%typedarray%.prototype.reverse
reverse.method([is(Int32Array)],
  (int32Array) =>
    int32Array.reverse()
)

// https://www.ecma-international.org/ecma-262/6.0/#sec-%typedarray%.prototype.reverse
reverse.method([is(Uint32Array)],
  (uint32Array) =>
    uint32Array.reverse()
)

// https://www.ecma-international.org/ecma-262/6.0/#sec-%typedarray%.prototype.reverse
reverse.method([is(Float32Array)],
  (float32Array) =>
    float32Array.reverse()
)

// https://www.ecma-international.org/ecma-262/6.0/#sec-%typedarray%.prototype.reverse
reverse.method([is(Float64Array)],
  (float64Array) =>
    float64Array.reverse()
)

module.exports = reverse
