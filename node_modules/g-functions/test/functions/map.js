'use strict'

const assert = require('assert')
const G = require('../../lib')

describe('add', function () {
  // This is an automatically generated stub.
  it('Array', function () {
    assert('map' in G)
  })

  // This is an automatically generated stub.
  it('Int8Array', function () {
    assert('map' in G)
  })

  // This is an automatically generated stub.
  it('Uint8Array', function () {
    assert('map' in G)
  })

  // This is an automatically generated stub.
  it('Uint8ClampedArray', function () {
    assert('map' in G)
  })

  // This is an automatically generated stub.
  it('Int16Array', function () {
    assert('map' in G)
  })

  // This is an automatically generated stub.
  it('Uint16Array', function () {
    assert('map' in G)
  })

  // This is an automatically generated stub.
  it('Int32Array', function () {
    assert('map' in G)
  })

  // This is an automatically generated stub.
  it('Uint32Array', function () {
    assert('map' in G)
  })

  // This is an automatically generated stub.
  it('Float32Array', function () {
    assert('map' in G)
  })

  // This is an automatically generated stub.
  it('Float64Array', function () {
    assert('map' in G)
  })

  it('Object', function () {
    assert.deepEqual(
      G.map(([key, value]) => [value, key], {a: 1, b: 2, c: 3}),
      {1: 'a', 2: 'b', 3: 'c'}
    )
  })

  it('Set', function () {
    assert.deepEqual(
      G.map(G.toUpperCase, new Set(['a', 'b', 'c'])),
      new Set(['A', 'B', 'C'])
    )
  })
})
