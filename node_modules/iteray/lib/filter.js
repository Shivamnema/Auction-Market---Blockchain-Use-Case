'use strict'

const generic = require('@nodeguy/generic')
const is = require('@nodeguy/type').is

const filter = generic.create({name: 'filter', curry: true})

filter.method([is(Function), is(Object)],
  (callback, object) => {
    const result = {}

    for (let key in object) {
      const value = object[key]

      if (callback(key, value) === true) {
        result[key] = value
      }
    }

    return result
  }
)

filter.method([is(Function), is('Iterable')],
  function * (callback, iterable) {
    for (let value of iterable) {
      if (callback(value) === true) {
        yield value
      }
    }
  }
)

filter.method([is(Function), is(Array)],
  (callback, array) =>
    array.filter(callback)
)

module.exports = filter
