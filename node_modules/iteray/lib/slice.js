'use strict'

const AsyncQueue = require('./AsyncQueue')
const generic = require('@nodeguy/generic')
const is = require('@nodeguy/type').is
const to = require('./to')

const slice = generic.create({name: 'slice', curry: true})

slice.method([x => x >= 0, x => x >= 0, is('AsyncIterable')],
  (start, end, asyncIterable) => {
    const input = to('Iterator', asyncIterable)
    let index = 0

    for (index = 0; index < start; index++) {
      input.next()
    }

    const pull = () => {
      output.push(index < end
        ? input.next()
        : Promise.resolve({done: true})
      )

      index++
    }

    const output = AsyncQueue(pull)
    return output
  }
)

slice.method([x => x >= 0, x => x >= 0, is('Iterable')],
  (start, end, iterable) => {
    const input = to('Iterator', iterable)
    let index = 0

    for (index = 0; index < start; index++) {
      input.next()
    }

    return to('Iterable', () => {
      const result = index < end
        ? input.next()
        : {done: true}

      index++
      return result
    })
  }
)

slice.method([is(Number), is(Number), is('arguments')],
  (start, end, args) =>
    slice(start, end, Array.from(args))
)

slice.method([is(Number), is(Number), is(String)],
  (start, end, string) =>
    string.slice(start, end)
)

slice.method([is(Number), is(Number), is(Array)],
  (start, end, array) =>
    array.slice(start, end)
)

module.exports = slice
