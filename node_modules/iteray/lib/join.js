'use strict'

const AsyncQueue = require('./AsyncQueue')
const generic = require('@nodeguy/generic')
const is = require('@nodeguy/type').is
const map = require('./map')
const to = require('./to')

const join = generic.create({name: 'join', curry: true})

join.method([is('AsyncIterable'), is('AsyncIterable')],
  (...asyncIterables) => {
    const inputs = asyncIterables.map((asyncIterable) => ({
      iterator: to('Iterator', asyncIterable),
      pulling: false,
      done: false
    }))

    return AsyncQueue((push) => {
      const pull = (input, other) => {
        if (!input.pulling) {
          input.pulling = true

          input.iterator.next().then((result) => {
            input.pulling = false
            input.done = result.done

            if (!input.done || other.done) {
              push(Promise.resolve(result))
            }
          })
        }
      }

      pull(inputs[0], inputs[1])
      pull(inputs[1], inputs[0])
    })
  }
)

join.method([is('Iterable'), is('Iterable')],
  (...iterables) => {
    const [left, right] = map(to('Iterator'), iterables)
    const queue = []

    return to('Iterable', () => {
      if (queue.length > 0) {
        return queue.shift()
      } else {
        queue.push(right.next())
        return left.next()
      }
    })
  }
)

module.exports = join
