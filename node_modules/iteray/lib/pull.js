'use strict'

const AsyncQueue = require('./AsyncQueue')
const generic = require('@nodeguy/generic')
const is = require('@nodeguy/type').is
const to = require('./to')

const pull = generic.create({name: 'pull'})

pull.method([is('Iterable')],
  (iterable) => {
    const input = to('Iterator', iterable)
    let pending = 0

    return AsyncQueue((push) => {
      const result = input.next()

      if (result.done) {
        if (pending === 0) {
          push(Promise.resolve(result))
        }
      } else {
        pending++

        result.value.then(
          (value) => {
            push(Promise.resolve({done: false, value}))
            pending--
          },
          (reason) => {
            push(Promise.reject(reason))
            pending--
          }
        )
      }
    })
  }
)

pull.method([is('AsyncIterable')],
  (asyncIterable) => {
    const input = to('Iterator', asyncIterable)
    let pending = 0

    return AsyncQueue((push) => {
      input.next().then((result) => {
        if (result.done) {
          if (pending === 0) {
            push(Promise.resolve(result))
          }
        } else {
          pending++

          result.value.then(
            (value) => {
              push(Promise.resolve({done: false, value}))
              pending--
            },
            (reason) => {
              push(Promise.reject(reason))
              pending--
            }
          )
        }
      })
    })
  }
)

module.exports = pull
