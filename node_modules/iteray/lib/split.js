'use strict'

const AsyncQueue = require('./AsyncQueue')
const generic = require('@nodeguy/generic')
const is = require('@nodeguy/type').is
const to = require('./to')

const split = generic.create({name: 'split', curry: true})

split.method([is(Function), is('AsyncIterable')],
  (callback, asyncIterable) => {
    const outputs = split(asyncIterable)
    callback(outputs[0])
    return outputs[1]
  }
)

split.method([is('AsyncIterable')],
  (asyncIterable) => {
    const input = to('Iterator', asyncIterable)

    const pull = () => {
      if (left.isPulling() && right.isPulling()) {
        const next = input.next()
        left.push(next)
        right.push(next)
      }
    }

    const left = AsyncQueue(pull)
    const right = AsyncQueue(pull)
    return [left, right]
  }
)

split.method([is('Iterable')],
  (iterable) => {
    const input = to('Iterator', iterable)
    const queues = {false: [], true: []}

    const output = (left) => ({
      [Symbol.iterator]: () => ({
        next: () => {
          if (queues[left].length > 0) {
            return queues[left].shift()
          } else {
            const result = input.next()
            queues[!left].push(result)
            return result
          }
        }
      })
    })

    return [output(true), output(false)]
  }
)

module.exports = split
