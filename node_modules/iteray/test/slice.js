'use strict'

const assert = require('assert')
const I = require('../lib')

const elements = [1, 2, 3, 4]

describe('Array', function () {
  it('slices', function () {
    assert.deepEqual(I.slice(1, 3, elements), [2, 3])
  })

  it('is curried', function () {
    assert.deepEqual(I.slice(1)(3)(elements), [2, 3])
  })
})

describe('String', function () {
  it('slices', function () {
    assert.equal(I.slice(1, 3, '1234'), '23')
  })
})

describe('arguments', function () {
  it('slices fruits', function () {
    function slicer () {
      return I.slice(1, 3, arguments)
    }

    assert.deepEqual(slicer(...elements), [2, 3])
  })
})

describe('Iterable', function () {
  const iterable = I.to('Iterable', elements)

  it('accepts positive values', function () {
    assert.deepEqual(I.to(Array, I.slice(1, 3, iterable)), [2, 3])
  })

  it("doesn't accept negative values", function () {
    assert.throws(() => {
      I.slice(-2, Infinity, iterable)
    }, /No method matches 3 arguments in call to generic function 'slice'./)
  })
})

it('AsyncIterable', function () {
  return I.to(Array, I.slice(1, 3, I.to('AsyncIterable', elements)))
    .then((sliced) => {
      assert.deepEqual(sliced, [2, 3])
    })
})
